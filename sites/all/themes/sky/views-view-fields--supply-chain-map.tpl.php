<?php/** * @file * Default simple view template to all the fields as a row. * * - $view: The view in use. * - $fields: an array of $field objects. Each one contains: *   - $field->content: The output of the field. *   - $field->raw: The raw data for the field, if it exists. This is NOT output safe. *   - $field->class: The safe class id to use. *   - $field->handler: The Views field handler object controlling this field. Do not use *     var_export to dump this object, as it can't handle the recursion. *   - $field->inline: Whether or not the field should be inline. *   - $field->inline_html: either div or span based on the above flag. *   - $field->wrapper_prefix: A complete wrapper containing the inline_html to use. *   - $field->wrapper_suffix: The closing tag for the wrapper. *   - $field->separator: an optional separator that may appear before a field. *   - $field->label: The wrap label text to use. *   - $field->label_html: The full HTML of the label to use including *     configured element type. * - $row: The raw result object from the query, with all data it fetched. * * @ingroup views_templates */?><?php$type = $row->node_type;$lat = $row->location_latitude;$lon = $row->location_longitude;?><?php if($type == 'supply_chain_node' || $type == 'hq'): ?><?php   $node_type = field_get_items('node', node_load($row->nid), 'field_type');  $node_type = $node_type[0]['value'];  $marker_icon = 'factory';  if($type == 'hq') {    $marker_icon = 'hq';  }  else if($node_type == 'physical') {    $marker_icon = 'factory';  }  else if($node_type == 'it') {    $marker_icon = 'data';  }?><script type="text/javascript">   var marker_<?php print $row->nid ?> = new google.maps.Marker({      position: new google.maps.LatLng(<?php print("$lat,$lon") ?>),      map: map,      icon: '/<?php print $marker_icon?>.png',      title: '<?php print $row->node_title ?> (<?php print $row->nid ?>)'  });   bound.extend(marker_<?php print $row->nid ?>.getPosition());  map.fitBounds(bound);    var infowindow_<?php print $row->nid ?> = new google.maps.InfoWindow({      content: '<?php print $row->node_title ?>'  });  google.maps.event.addListener(marker_<?php print $row->nid ?>, 'click', function() {    infowindow_<?php print $row->nid ?>.open(map,marker_<?php print $row->nid ?>);  }); </script> <?php endif ?><?php if($type == 'supply_chain_transaction'): ?><?php  $transaction = $row->_field_data['nid']['entity'];  $sid = $transaction->field_source['und'][0]['target_id'];  $did = $transaction->field_destination['und'][0]['target_id'];    $source_location = field_get_items('node', node_load($sid), 'field_location');  $slat = $source_location[0]['latitude'];  $slon = $source_location[0]['longitude'];    $dest_location = field_get_items('node', node_load($did), 'field_location');  $dlat = $dest_location[0]['latitude'];  $dlon = $dest_location[0]['longitude'];?><script type="text/javascript">   var lineSymbol = {    path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW  };     var path = [ new google.maps.LatLng(<?php print("$slat,$slon")?>),new google.maps.LatLng(<?php print("$dlat,$dlon")?>) ];  var line = new google.maps.Polyline({      path: path,       strokeOpacity: 0.6,      strokeWeight: 2,      icons: [{ icon: lineSymbol, offset: '75%' },{ icon: lineSymbol, offset: '25%' }],       map: map    });</script> <?php endif ?>